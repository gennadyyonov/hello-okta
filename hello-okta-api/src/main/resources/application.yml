hellooktaapi:
  security-mapping:
    ALLOWED_USERS:
      - HelloOkta_StandardUser
  filterOrderMapping:
    COMMONS_REQUEST_LOGGING: -10
    USER_LOGGING: 10

feign:
  httpclient:
    enabled: true

spring:
  main.allow-bean-definition-overriding: true
  application:
    name: hello-okta-api
  security:
    oauth2:
      client:
        provider:
          okta:
            authorization-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/authorize
            token-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/token
            user-info-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/userinfo
            jwk-set-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/keys
            user-name-attribute: email
        registration:
          okta:
            client-authentication-method: none
            scope:
              - openid
              - profile
              - email
      resourceserver:
        jwt:
          issuer-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}
          jwk-set-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/keys
  config:
    import:
      - csrf.yaml
      - technical-endpoint.yaml

logging:
  level:
    org.springframework.security.oauth2.client.OAuth2RestTemplate: INFO
    org.springframework.web.client.RestTemplate: INFO
    org.springframework.web.filter.CommonsRequestLoggingFilter: INFO

schedule:
  jwk-set-cache-refresh-time: 300000 # 5 minutes

springdoc:
  swagger-ui:
    enabled: ${springdoc.swagger-ui.enabled:false}
    csrf:
      enabled: ${csrf.csrf-enabled}
      cookie-name: XSRF-TOKEN
      header-name: X-XSRF-TOKEN
    oauth:
      use-pkce-with-authorization-code-grant: true
      scopes:
        - openid
        - profile
        - email

server:
  servlet:
    context-path: /api