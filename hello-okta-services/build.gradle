plugins {
    id 'checkstyle'
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'org.springframework.boot' version "${springBootVersion}"
}

dependencies {
    // Import BOM-s
    implementation enforcedPlatform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation project(':hello-okta-logging-api')
    implementation project(':hello-okta-logging-impl')

    compileOnly "javax.servlet:javax.servlet-api"

    implementation 'org.springframework:spring-web'
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.aspectj:aspectjweaver'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'io.github.openfeign:feign-jackson'
    implementation 'io.github.openfeign:feign-httpclient'
    implementation 'io.github.openfeign.form:feign-form-spring'
    implementation "org.apache.httpcomponents:httpclient:${apacheHttpClientVersion}"
    implementation "commons-codec:commons-codec:${commonsCodecVersion}"

    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

    implementation('net.minidev:json-smart') {
        because 'Critical CVE-2021-27568 fix'
        version {
            strictly jsonSmartVersion
        }
    }
}

checkstyle {
    toolVersion = '8.42'
    configProperties.configDir = parent.file("config/checkstyle")
}

checkstyleTest {
    enabled = false
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}