sourceSets {
    main
    localhost {
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

configurations {
    localhostCompile.extendsFrom compile
    localhostCompileOnly.extendsFrom compileOnly
}

task runLocal(type: Exec, dependsOn: bootRun) {
    group = "application"

    doFirst() {
        println("Running LOCALHOST...")
    }
}

bootRun() {
    def localPropertiesFile = 'src/localhost/resources/localhost.properties';
    file(localPropertiesFile).readLines().each() {
        if (!it.isEmpty() && !it.startsWith("#")) {
            def (key, value) = it.tokenize('=')
            if (System.getenv(key) == null) {
                environment key, value
            }
        }
    }

    systemProperties System.properties
}

ext {
    set('graphqlJavaSpringBootVersion', "8.0.0")
}

dependencies {
    compile project(':hello-okta-api-dto')
    compile project(':hello-okta-logging-impl')
    compile project(':hello-okta-services')
    compile project(':hello-okta-actuator')

    // GraphQL
    compile "com.graphql-java-kickstart:graphql-spring-boot-starter:${graphqlJavaSpringBootVersion}"
    compile "com.graphql-java-kickstart:graphiql-spring-boot-starter:${graphqlJavaSpringBootVersion}"
    compile "com.google.guava:guava"

    if (gradle.startParameter.taskNames.contains("runLocal") ) {
        println("LOCALHOST Dependencies")
        runtimeClasspath sourceSets.localhost.output
    }
}
