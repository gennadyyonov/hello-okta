plugins {
    id 'checkstyle'
    id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
    id 'org.springframework.boot' version "$springBootVersion"
}

ext {
    set('graphqlJavaSpringBootVersion', '15.0.0')
}

dependencies {
    // Import BOM-s
    implementation enforcedPlatform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")
    implementation enforcedPlatform("io.micrometer:micrometer-tracing-bom:$micrometerTracingVersion")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation project(':hello-okta-api-dto')
    implementation project(':hello-okta-logging-api')
    implementation project(':hello-okta-logging-impl')
    implementation project(':hello-okta-services')
    implementation project(':hello-okta-actuator')

    // GraphQL
    implementation "com.graphql-java-kickstart:graphql-spring-boot-starter:$graphqlJavaSpringBootVersion"

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation "com.nimbusds:nimbus-jose-jwt:$nimbusdsVersion"

    implementation 'io.micrometer:micrometer-tracing'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'io.github.openfeign:feign-jackson'
    implementation 'io.github.openfeign:feign-httpclient'
    implementation 'io.github.openfeign.form:feign-form-spring'
    implementation "org.apache.httpcomponents:httpclient:$apacheHttpClientVersion"

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation 'commons-codec:commons-codec'

    implementation('commons-io:commons-io') {
        because 'Medium CVE-20, CVE-2021-29425 fix'
        version {
            strictly commonsIoVersion
        }
    }

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$openApiVersion"

    testImplementation project(':hello-okta-testing')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "com.graphql-java-kickstart:graphql-spring-boot-starter-test:$graphqlJavaSpringBootVersion"
    testImplementation "org.wiremock:wiremock:$wirmockVersion"
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
    testImplementation "io.jsonwebtoken:jjwt-api:$jsonwebtokenVersion"
    testImplementation "io.jsonwebtoken:jjwt-gson:$jsonwebtokenVersion"
    testImplementation "io.jsonwebtoken:jjwt-impl:$jsonwebtokenVersion"
}

checkstyle {
    toolVersion = '8.45.1'
    configProperties.configDir = parent.file("config/checkstyle")
}

checkstyleTest {
    enabled = false
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "app.${archiveExtension.get()}"
}