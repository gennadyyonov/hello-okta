hello-okta-bff:
  allowed-origins: ${cors.allowed-origins}
  chuck-norris-url: ${chuck-norris.url}
  security-mapping:
    ALLOWED_USERS:
      - HelloOkta_StandardUser
  filter-order-mapping:
    COMMONS_REQUEST_LOGGING: -10
    USER_LOGGING: 10

feign:
  httpclient:
    enabled: true

spring:
  main.allow-bean-definition-overriding: true
  application:
    name: hello-okta-bff
  security:
    oauth2:
      client:
        provider:
          okta:
            authorization-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/authorize
            token-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/token
            user-info-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/userinfo
            jwk-set-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/keys
            user-name-attribute: email
        registration:
          okta:
            client-authentication-method: none
            scope:
              - openid
              - profile
              - email
      resourceserver:
        jwt:
          issuer-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}
          jwk-set-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/keys
  config:
    import:
      - csrf.yaml
      - technical-endpoint.yaml

hello-okta-api:
  base-url: ${hello-okta-api.url}
  client:
    run-as-details:
      grant-type: client_credentials
      access-token-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/token
      scope: message.read

logging:
  level:
    org.springframework.security.oauth2.client.OAuth2RestTemplate: INFO
    org.springframework.web.client.RestTemplate: INFO
    lv.gennadyyonov.hellookta.bff.connectors.hellooktaapi.HelloOktaApiConnector: INFO
    lv.gennadyyonov.hellookta.connectors.TokenConnector: INFO
    lv.gennadyyonov.hellookta.connectors.UserInfoConnector: INFO
    org.springframework.web.filter.CommonsRequestLoggingFilter: INFO

graphql:
  servlet:
    exception-handlers-enabled: true
    corsEnabled: false
    # https://github.com/graphql-java-kickstart/graphql-spring-boot/issues/729
    async-mode-enabled: false
    websocket:
      enabled: false
  task:
    async-mode-enabled: true
    execution:
      thread-name-prefix: GraphqlAsync-
      pool:
        core-size: 150
        max-size: 550
        keep-alive-seconds: 30
  tools:
    introspection-enabled: ${technical-endpoint.enabled}
  playground:
    enabled: ${technical-endpoint.enabled}
    endpoint: /bff/graphql
    staticPath:
      base: /bff/vendor/playground

altair:
  enabled: ${technical-endpoint.enabled}
  base-path: /bff
  options:
    endpoint-url: /bff/graphql

graphiql:
  enabled: ${technical-endpoint.enabled}
  props:
    variables:
      headerEditorEnabled: true

voyager:
  enabled: ${technical-endpoint.enabled}
  basePath: /bff/

schedule:
  jwk-set-cache-refresh-time: 300000 # 5 minutes

springdoc:
  swagger-ui:
    enabled: ${technical-endpoint.enabled}
    csrf:
      enabled: ${csrf.csrf-enabled}
      cookie-name: XSRF-TOKEN
      header-name: X-XSRF-TOKEN
    oauth:
      use-pkce-with-authorization-code-grant: true
      scopes:
        - openid
        - profile
        - email

server:
  servlet:
    context-path: /bff