hello-okta-bff:
  allowed-origins: ${cors.allowed-origins}
  csrf-enabled: true
  chuck-norris-url: ${chuck-norris.url}
  security-mapping:
    ALLOWED_USERS:
      - HelloOkta_StandardUser
  filter-order-mapping:
    COMMONS_REQUEST_LOGGING: -10
    USER_LOGGING: 10

feign:
  httpclient:
    enabled: true

spring:
  main.allow-bean-definition-overriding: true
  application:
    name: hello-okta-bff
  security:
    oauth2:
      client:
        provider:
          okta:
            authorization-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/authorize
            token-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/token
            user-info-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/userinfo
            jwk-set-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/keys
            user-name-attribute: email
        registration:
          okta:
            client-authentication-method: none
            scope:
              - openid
              - profile
              - email
      resourceserver:
        jwt:
          issuer-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}
          jwk-set-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/keys

hello-okta-api:
  base-url: ${hello-okta-api.url}
  client:
    run-as-details:
      grant-type: client_credentials
      access-token-uri: ${spring.security.oauth2.client.provider.okta.issuer-uri}/v1/token
      scope: message.read

logging:
  level:
    org.springframework.security.oauth2.client.OAuth2RestTemplate: INFO
    org.springframework.web.client.RestTemplate: INFO
    lv.gennadyyonov.hellookta.bff.connectors.hellooktaapi.HelloOktaApiConnector: INFO
    lv.gennadyyonov.hellookta.connectors.TokenConnector: INFO
    lv.gennadyyonov.hellookta.connectors.UserInfoConnector: INFO
    org.springframework.web.filter.CommonsRequestLoggingFilter: INFO

graphql:
  servlet:
    corsEnabled: false
    websocket:
      enabled: false
  task:
    execution:
      thread-name-prefix: GraphqlAsync-
      pool:
        core-size: 150
        max-size: 550
        keep-alive-seconds: 30

schedule:
  jwk-set-cache-refresh-time: 300000 # 5 minutes