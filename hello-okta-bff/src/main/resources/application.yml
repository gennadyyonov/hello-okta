server:
  port: 8060

okta:
  oauth2:
    issuer: ${issuer:https://dev-220281.okta.com/oauth2/aus26efk9hrb1yASy357}
    clientId: ${clientId:0oa26efk122CnG3k3357}
    clientSecret: ${clientSecret:f-Th4oNxu0qzMghhtGev2vaoAPf9l7IgzHENsYny}
    audience: ${audience:api://hellookta}

spring:
  security:
    oauth2:
      client:
        registration:
          okta:
            client-id: ${clientId:0oa26efk122CnG3k3357}
            client-secret: ${clientSecret:f-Th4oNxu0qzMghhtGev2vaoAPf9l7IgzHENsYny}
          provider:
            okta:
              user-name-attribute: email

hellooktaclient:
  baseUrl: http://localhost:8070
  clientCredentialsResourceDetails:
      clientId: ${hellooktaclient_id:0oa2m950mjcFnPPNJ357}
      clientSecret: ${hellooktaclient_secret:IHiSqDkab2oh_pQXAscZ4BuRUb1X0yEHYl70cVgI}
      accessTokenUri: ${issuer:https://dev-220281.okta.com/oauth2/aus26efk9hrb1yASy357}/v1/token
      scope: message.read

logging:
  level:
    org.springframework.security.oauth2.client.OAuth2RestTemplate: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG
    lv.gennadyyonov.hellookta.bff.connectors.hellooktaapi.HelloOktaApiConnector: DEBUG
    lv.gennadyyonov.hellookta.bff.connectors.okta.TokenConnector: DEBUG
