plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'com.diffplug.spotless' version '7.0.3' apply false
    id 'org.barfuin.gradle.jacocolog' version '3.1.0' apply false
}

allprojects {
    repositories {
        mavenCentral()
    }

    ext {
        set('apacheHttpClientVersion', '4.5.14')
        set('commonsIoVersion', '2.14.0')
        set('commonsCompressVersion', '1.26.0')
        set('jsonwebtokenVersion', '0.12.6')
        set('micrometerTracingVersion', 'latest.release')
        set('nimbusdsVersion', '10.3')
        set('openApiVersion', '2.8.8')
        set('springBootVersion', '3.5.0')
        set('springCloudVersion', '2024.0.1')
        set('springDependencyManagementVersion', '1.1.7')
        set('wirmockVersion', '3.13.0')
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations.configureEach {
    resolutionStrategy {
        force 'com.google.guava:guava:33.4.8-jre'
    }
}

subprojects {
    group = 'lv.gennadyyonov.hello'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    apply plugin: 'org.barfuin.gradle.jacocolog'

    spotless {
        java {
            googleJavaFormat()
            importOrder('', 'javax', 'java', '\\#')
            trimTrailingWhitespace()
            endWithNewline()
        }
    }

    checkstyle {
        toolVersion = '10.24.0'
        configProperties.put('org.checkstyle.google.suppressionfilter.config', rootProject.file("config/checkstyle/checkstyle-suppressions.xml"))
        maxWarnings = 0
    }

    tasks.withType(Checkstyle).configureEach {
        reports {
            xml.required = true
            html.required = true
        }
    }

    compileJava.dependsOn 'spotlessCheck'
    tasks.compileJava.finalizedBy tasks.checkstyleMain
    tasks.compileTestJava.finalizedBy tasks.checkstyleTest

    tasks.named('jacocoTestReport') {
        dependsOn('test')

        reports {
            xml.required = true
            html.required = true
        }
    }

    tasks.named('jacocoTestCoverageVerification') {
        dependsOn('jacocoTestReport')

        if (!project.hasProperty('overrideJacocoCoverageVerification')) {
            violationRules {
                rule {
                    limit {
                        minimum = 0.85
                    }
                }
                rule {
                    limit {
                        counter = 'LINE'
                        value = 'COVEREDRATIO'
                        minimum = 0.85
                    }
                }
                rule {
                    limit {
                        counter = 'BRANCH'
                        value = 'COVEREDRATIO'
                        minimum = 0.75
                    }
                }
                rule {
                    limit {
                        counter = 'COMPLEXITY'
                        value = 'COVEREDRATIO'
                        minimum = 0.80
                    }
                }
                rule {
                    limit {
                        counter = 'METHOD'
                        value = 'COVEREDRATIO'
                        minimum = 0.85
                    }
                }
                rule {
                    limit {
                        counter = 'CLASS'
                        value = 'COVEREDRATIO'
                        minimum = 0.90
                    }
                }
            }
        }
    }

    tasks.named('check') {
        dependsOn('jacocoTestCoverageVerification')
    }

    configurations {
        implementation {
            // Low CVE-200, CVE-2020-15250 fix
            exclude group: 'junit', module: 'junit'
        }
    }
}
